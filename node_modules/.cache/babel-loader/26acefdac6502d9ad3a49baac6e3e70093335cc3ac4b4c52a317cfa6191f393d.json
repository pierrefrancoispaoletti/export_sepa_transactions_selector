{"ast":null,"code":"var _jsxFileName = \"/Users/pierrefrancoispaoletti/Desktop/EXPORT_SEPA/transactions-selector/src/components/App/App.js\",\n  _window$comptesDebite,\n  _window$documents,\n  _window$formats,\n  _s = $RefreshSig$();\nimport { Container, FormControlLabel, Switch } from \"@mui/material\";\nimport Header from \"../Header/Header\";\nimport { accountDebitors, documents, formats } from \"../../dummy-data/test-data\";\nimport TransactionsSelector from \"../TransactionsSelector/TransactionsSelector\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport URL_GENERATION from \"../../_config\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ACCOUNT_DEBITORS = (_window$comptesDebite = window.comptesDebiteurs) !== null && _window$comptesDebite !== void 0 ? _window$comptesDebite : accountDebitors;\nconst DOCUMENTS = (_window$documents = window.documents) !== null && _window$documents !== void 0 ? _window$documents : documents;\nconst FORMATS = (_window$formats = window.formats) !== null && _window$formats !== void 0 ? _window$formats : formats;\nconst App = () => {\n  _s();\n  // const [format, setFormat] = useState(0);\n  const [transactions, setTransactions] = useState([...DOCUMENTS]);\n  const [transactionsToExport, setTransactionsToExport] = useState([]);\n  const [isGrouped, setIsGrouped] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [transactionTotals, setTransactionTotals] = useState({});\n  const [debitor, setDebitor] = useState([]);\n  console.log(transactionsToExport);\n  useEffect(() => {\n    setTransactionTotals(isTransactionOK(transactions));\n  }, [transactions]);\n  useEffect(() => {\n    // Vérifier si des transactions non valides sont sélectionnées\n    const invalidTransactions = transactionsToExport.filter(_ref => {\n      let {\n        nomCrediteur,\n        ttc\n      } = _ref;\n      return isTransactionInvalid(nomCrediteur, ttc);\n    });\n    if (invalidTransactions.length > 0) {\n      // Filtrer les transactions non valides et mettre à jour transactionsToExport\n      const validTransactions = transactionsToExport.filter(_ref2 => {\n        let {\n          nomCrediteur,\n          ttc\n        } = _ref2;\n        return isTransactionInvalid(nomCrediteur, ttc) === false;\n      });\n      setTransactionsToExport(validTransactions);\n    }\n  }, [isGrouped, transactions]);\n  const getTransactionsToExportTotal = () => {\n    return transactionsToExport.reduce((acc, _ref3) => {\n      let {\n        nomCrediteur,\n        ttc\n      } = _ref3;\n      acc[nomCrediteur] = (acc[nomCrediteur] || 0) + Number(ttc);\n      return acc;\n    }, {});\n  };\n  const isTransactionOK = transactions => {\n    const totalTransactionsByNomCrediteur = transactions.reduce((acc, _ref4) => {\n      let {\n        nomCrediteur,\n        ttc\n      } = _ref4;\n      acc[nomCrediteur] = (acc[nomCrediteur] || 0) + Number(ttc);\n      return acc;\n    }, {});\n    return totalTransactionsByNomCrediteur;\n  };\n  const isTransactionInvalid = (nomCrediteur, ttc) => {\n    return isGrouped && transactionTotals[nomCrediteur] < 0 || !isGrouped && Number(ttc) < 0;\n  };\n  const isTransactionToBeExported = Res_id => {\n    return transactionsToExport.some(transaction => transaction.Res_Id === Res_id);\n  };\n  const isAllTransactionsSelected = () => {\n    return transactionsToExport.length === transactions.length;\n  };\n  const selectTransaction = Res_Id => e => {\n    const {\n      checked\n    } = e.target;\n    if (checked) {\n      setTransactionsToExport(transactionsToExport => [...transactionsToExport, transactions.find(transaction => transaction.Res_Id === Res_Id)]);\n    } else {\n      setTransactionsToExport(transactionsToExport => transactionsToExport.filter(transaction => transaction.Res_Id !== Res_Id));\n    }\n  };\n  const selectAllTransactions = e => {\n    const {\n      checked\n    } = e.target;\n    if (checked) {\n      const validTransactions = transactions.filter(_ref5 => {\n        let {\n          nomCrediteur,\n          ttc\n        } = _ref5;\n        return isTransactionInvalid(nomCrediteur, ttc) === false;\n      });\n      setTransactionsToExport(validTransactions);\n    } else {\n      setTransactionsToExport([]);\n    }\n  };\n  const setGrouped = () => {\n    setIsGrouped(!isGrouped);\n  };\n  const handleChangeDebitor = (transactions, nomCrediteur) => e => {\n    const {\n      value\n    } = e.target;\n    setDebitor(debitor => {\n      const updatedDebitor = debitor.map(deb => deb.nomCrediteur === nomCrediteur ? {\n        ...deb,\n        debitor_id: value\n      } : deb);\n      const existingDebitor = updatedDebitor.find(deb => deb.nomCrediteur === nomCrediteur);\n      return existingDebitor ? updatedDebitor : [...updatedDebitor, {\n        nomCrediteur,\n        debitor_id: value\n      }];\n    });\n    setTransactions(transactions => transactions.map(transaction => transaction.nomCrediteur === nomCrediteur ? {\n      ...transaction,\n      debitor_id: value\n    } : transaction));\n    setTransactionsToExport(transactionsToExport => transactionsToExport.map(transaction => transaction.nomCrediteur === nomCrediteur ? {\n      ...transaction,\n      debitor_id: value\n    } : transaction));\n  };\n  const handleGenerateXML = async e => {\n    e.preventDefault();\n    setLoading(true);\n    const formData = new FormData();\n    formData.append(\"transactions\", JSON.stringify(transactionsToExport));\n    formData.append(\"isGrouped\", isGrouped);\n    // formData.append(\"format\", format);\n\n    try {\n      const response = await axios({\n        method: \"post\",\n        url: URL_GENERATION,\n        data: formData\n      });\n      if (response.data.status && response.data.status === \"error\") {\n        alert(response.data.message);\n      } else {\n        let blob = null;\n        if (response.headers[\"content-type\"] === \"application/xml\") {\n          blob = new Blob([response.data], {\n            type: \"application/xml\"\n          });\n        } else {\n          blob = new Blob([response.data], {\n            type: \"application/zip\"\n          });\n        }\n        const url = window.URL.createObjectURL(blob);\n        const link = document.createElement(\"a\");\n        const contentDisposition = response.headers[\"content-disposition\"];\n        if (contentDisposition.length > 0) {\n          const filename = contentDisposition === null || contentDisposition === void 0 ? void 0 : contentDisposition.split(\"filename=\")[1];\n          link.href = url;\n          link.setAttribute(\"download\", filename);\n          console.log(link);\n          document.body.appendChild(link);\n          link.click();\n          document.body.removeChild(link);\n        }\n      }\n    } catch (error) {\n      console.log(error);\n      alert(\"Il y à eu une erreur lors de la soumission du formulaire, veuillez réessayer dans quelques instants\");\n    }\n    setLoading(false);\n  };\n\n  // const handleChangeFormat = (e) => {\n  //   setFormat(e.target.value);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        sx: {\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          width: \"100%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"top\",\n          control: /*#__PURE__*/_jsxDEV(Switch, {\n            color: \"primary\",\n            checked: isGrouped,\n            onChange: () => setGrouped()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this),\n          label: \"Regrouper les transactions\",\n          labelPlacement: \"top\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleGenerateXML,\n        children: [/*#__PURE__*/_jsxDEV(TransactionsSelector, {\n          transactions: transactions,\n          isTransactionToBeExported: isTransactionToBeExported,\n          handleChangeDebitor: handleChangeDebitor,\n          selectTransaction: selectTransaction,\n          DEBITORS_ACCOUNT: ACCOUNT_DEBITORS,\n          selectAllTransactions: selectAllTransactions,\n          isAllTransactionsSelected: isAllTransactionsSelected,\n          isGrouped: isGrouped,\n          transactionTotals: transactionTotals,\n          isTransactionInvalid: isTransactionInvalid,\n          debitor: debitor,\n          getTransactionsToExportTotal: getTransactionsToExportTotal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          sx: {\n            display: \"flex\",\n            alignItems: \"center\",\n            flexDirection: \"column\",\n            paddingTop: \"40px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(LoadingButton, {\n            disabled: transactionsToExport.length === 0 || loading,\n            color: \"success\",\n            variant: \"contained\",\n            type: \"submit\",\n            loading: loading,\n            children: !loading ? \"Générer le XML\" : \"XML en cours de création\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"1g9+nEZV8o12WSO0pp/3LvfuAKc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Container","FormControlLabel","Switch","Header","accountDebitors","documents","formats","TransactionsSelector","useEffect","useState","axios","URL_GENERATION","LoadingButton","jsxDEV","_jsxDEV","ACCOUNT_DEBITORS","_window$comptesDebite","window","comptesDebiteurs","DOCUMENTS","_window$documents","FORMATS","_window$formats","App","_s","transactions","setTransactions","transactionsToExport","setTransactionsToExport","isGrouped","setIsGrouped","loading","setLoading","transactionTotals","setTransactionTotals","debitor","setDebitor","console","log","isTransactionOK","invalidTransactions","filter","_ref","nomCrediteur","ttc","isTransactionInvalid","length","validTransactions","_ref2","getTransactionsToExportTotal","reduce","acc","_ref3","Number","totalTransactionsByNomCrediteur","_ref4","isTransactionToBeExported","Res_id","some","transaction","Res_Id","isAllTransactionsSelected","selectTransaction","e","checked","target","find","selectAllTransactions","_ref5","setGrouped","handleChangeDebitor","value","updatedDebitor","map","deb","debitor_id","existingDebitor","handleGenerateXML","preventDefault","formData","FormData","append","JSON","stringify","response","method","url","data","status","alert","message","blob","headers","Blob","type","URL","createObjectURL","link","document","createElement","contentDisposition","filename","split","href","setAttribute","body","appendChild","click","removeChild","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","display","justifyContent","width","control","color","onChange","label","labelPlacement","onSubmit","DEBITORS_ACCOUNT","alignItems","flexDirection","paddingTop","disabled","variant","_c","$RefreshReg$"],"sources":["/Users/pierrefrancoispaoletti/Desktop/EXPORT_SEPA/transactions-selector/src/components/App/App.js"],"sourcesContent":["import { Container, FormControlLabel, Switch } from \"@mui/material\";\nimport Header from \"../Header/Header\";\nimport {\n  accountDebitors,\n  documents,\n  formats,\n} from \"../../dummy-data/test-data\";\nimport TransactionsSelector from \"../TransactionsSelector/TransactionsSelector\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport URL_GENERATION from \"../../_config\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\n\nconst ACCOUNT_DEBITORS = window.comptesDebiteurs ?? accountDebitors;\nconst DOCUMENTS = window.documents ?? documents;\nconst FORMATS = window.formats ?? formats;\n\nconst App = () => {\n  // const [format, setFormat] = useState(0);\n  const [transactions, setTransactions] = useState([...DOCUMENTS]);\n  const [transactionsToExport, setTransactionsToExport] = useState([]);\n  const [isGrouped, setIsGrouped] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [transactionTotals, setTransactionTotals] = useState({});\n  const [debitor, setDebitor] = useState([]);\n\n  console.log(transactionsToExport);\n\n  useEffect(() => {\n    setTransactionTotals(isTransactionOK(transactions));\n  }, [transactions]);\n\n  useEffect(() => {\n    // Vérifier si des transactions non valides sont sélectionnées\n    const invalidTransactions = transactionsToExport.filter(\n      ({ nomCrediteur, ttc }) => {\n        return isTransactionInvalid(nomCrediteur, ttc);\n      }\n    );\n\n    if (invalidTransactions.length > 0) {\n      // Filtrer les transactions non valides et mettre à jour transactionsToExport\n      const validTransactions = transactionsToExport.filter(\n        ({ nomCrediteur, ttc }) => {\n          return isTransactionInvalid(nomCrediteur, ttc) === false;\n        }\n      );\n      setTransactionsToExport(validTransactions);\n    }\n  }, [isGrouped, transactions]);\n\n  const getTransactionsToExportTotal = () => {\n    return transactionsToExport.reduce((acc, { nomCrediteur, ttc }) => {\n      acc[nomCrediteur] = (acc[nomCrediteur] || 0) + Number(ttc);\n      return acc;\n    }, {});\n  };\n\n  const isTransactionOK = (transactions) => {\n    const totalTransactionsByNomCrediteur = transactions.reduce(\n      (acc, { nomCrediteur, ttc }) => {\n        acc[nomCrediteur] = (acc[nomCrediteur] || 0) + Number(ttc);\n        return acc;\n      },\n      {}\n    );\n    return totalTransactionsByNomCrediteur;\n  };\n\n  const isTransactionInvalid = (nomCrediteur, ttc) => {\n    return (\n      (isGrouped && transactionTotals[nomCrediteur] < 0) ||\n      (!isGrouped && Number(ttc) < 0)\n    );\n  };\n\n  const isTransactionToBeExported = (Res_id) => {\n    return transactionsToExport.some(\n      (transaction) => transaction.Res_Id === Res_id\n    );\n  };\n\n  const isAllTransactionsSelected = () => {\n    return transactionsToExport.length === transactions.length;\n  };\n\n  const selectTransaction = (Res_Id) => (e) => {\n    const { checked } = e.target;\n    if (checked) {\n      setTransactionsToExport((transactionsToExport) => [\n        ...transactionsToExport,\n        transactions.find((transaction) => transaction.Res_Id === Res_Id),\n      ]);\n    } else {\n      setTransactionsToExport((transactionsToExport) =>\n        transactionsToExport.filter(\n          (transaction) => transaction.Res_Id !== Res_Id\n        )\n      );\n    }\n  };\n\n  const selectAllTransactions = (e) => {\n    const { checked } = e.target;\n    if (checked) {\n      const validTransactions = transactions.filter(({ nomCrediteur, ttc }) => {\n        return isTransactionInvalid(nomCrediteur, ttc) === false;\n      });\n      setTransactionsToExport(validTransactions);\n    } else {\n      setTransactionsToExport([]);\n    }\n  };\n\n  const setGrouped = () => {\n    setIsGrouped(!isGrouped);\n  };\n\n  const handleChangeDebitor = (transactions, nomCrediteur) => (e) => {\n    const { value } = e.target;\n\n    setDebitor((debitor) => {\n      const updatedDebitor = debitor.map((deb) =>\n        deb.nomCrediteur === nomCrediteur ? { ...deb, debitor_id: value } : deb\n      );\n      const existingDebitor = updatedDebitor.find(\n        (deb) => deb.nomCrediteur === nomCrediteur\n      );\n\n      return existingDebitor\n        ? updatedDebitor\n        : [...updatedDebitor, { nomCrediteur, debitor_id: value }];\n    });\n\n    setTransactions((transactions) =>\n      transactions.map((transaction) =>\n        transaction.nomCrediteur === nomCrediteur\n          ? { ...transaction, debitor_id: value }\n          : transaction\n      )\n    );\n    setTransactionsToExport((transactionsToExport) =>\n      transactionsToExport.map((transaction) =>\n        transaction.nomCrediteur === nomCrediteur\n          ? { ...transaction, debitor_id: value }\n          : transaction\n      )\n    );\n  };\n\n  const handleGenerateXML = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    const formData = new FormData();\n    formData.append(\"transactions\", JSON.stringify(transactionsToExport));\n    formData.append(\"isGrouped\", isGrouped);\n    // formData.append(\"format\", format);\n\n    try {\n      const response = await axios({\n        method: \"post\",\n        url: URL_GENERATION,\n        data: formData,\n      });\n\n      if (response.data.status && response.data.status === \"error\") {\n        alert(response.data.message);\n      } else {\n        let blob = null;\n        if (response.headers[\"content-type\"] === \"application/xml\") {\n          blob = new Blob([response.data], {\n            type: \"application/xml\",\n          });\n        } else {\n          blob = new Blob([response.data], {\n            type: \"application/zip\",\n          });\n        }\n        const url = window.URL.createObjectURL(blob);\n        const link = document.createElement(\"a\");\n        const contentDisposition = response.headers[\"content-disposition\"];\n        if (contentDisposition.length > 0) {\n          const filename = contentDisposition?.split(\"filename=\")[1];\n          link.href = url;\n          link.setAttribute(\"download\", filename);\n          console.log(link);\n          document.body.appendChild(link);\n          link.click();\n          document.body.removeChild(link);\n        }\n      }\n    } catch (error) {\n      console.log(error);\n      alert(\n        \"Il y à eu une erreur lors de la soumission du formulaire, veuillez réessayer dans quelques instants\"\n      );\n    }\n\n    setLoading(false);\n  };\n\n  // const handleChangeFormat = (e) => {\n  //   setFormat(e.target.value);\n  // };\n\n  return (\n    <div className=\"App\">\n      <Container>\n        <Header />\n        <Container\n          sx={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            width: \"100%\",\n          }}\n        >\n          <FormControlLabel\n            value=\"top\"\n            control={\n              <Switch\n                color=\"primary\"\n                checked={isGrouped}\n                onChange={() => setGrouped()}\n              />\n            }\n            label=\"Regrouper les transactions\"\n            labelPlacement=\"top\"\n          />\n          {/* <FormControlLabel\n            sx={{ width: \"150px\" }}\n            id=\"format\"\n            label=\"Format\"\n            labelPlacement=\"top\"\n            control={\n              <Select\n                fullWidth\n                labelId=\"format\"\n                value={format}\n                onChange={handleChangeFormat}\n                label=\"Format\"\n                variant=\"standard\"\n              >\n                {FORMATS.map((format, index) => (\n                  <MenuItem key={index} value={index}>\n                    {format}\n                  </MenuItem>\n                ))}\n              </Select>\n            }\n          ></FormControlLabel> */}\n        </Container>\n        <form onSubmit={handleGenerateXML}>\n          <TransactionsSelector\n            transactions={transactions}\n            isTransactionToBeExported={isTransactionToBeExported}\n            handleChangeDebitor={handleChangeDebitor}\n            selectTransaction={selectTransaction}\n            DEBITORS_ACCOUNT={ACCOUNT_DEBITORS}\n            selectAllTransactions={selectAllTransactions}\n            isAllTransactionsSelected={isAllTransactionsSelected}\n            isGrouped={isGrouped}\n            transactionTotals={transactionTotals}\n            isTransactionInvalid={isTransactionInvalid}\n            debitor={debitor}\n            getTransactionsToExportTotal={getTransactionsToExportTotal}\n          />\n          <Container\n            sx={{\n              display: \"flex\",\n              alignItems: \"center\",\n              flexDirection: \"column\",\n              paddingTop: \"40px\",\n            }}\n          >\n            <LoadingButton\n              disabled={transactionsToExport.length === 0 || loading}\n              color=\"success\"\n              variant=\"contained\"\n              type=\"submit\"\n              loading={loading}\n            >\n              {!loading ? \"Générer le XML\" : \"XML en cours de création\"}\n            </LoadingButton>\n          </Container>\n        </form>\n      </Container>\n    </div>\n  );\n};\nexport default App;\n"],"mappings":";;;;;AAAA,SAASA,SAAS,EAAEC,gBAAgB,EAAEC,MAAM,QAAQ,eAAe;AACnE,OAAOC,MAAM,MAAM,kBAAkB;AACrC,SACEC,eAAe,EACfC,SAAS,EACTC,OAAO,QACF,4BAA4B;AACnC,OAAOC,oBAAoB,MAAM,8CAA8C;AAC/E,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,eAAe;AAC1C,OAAOC,aAAa,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,gBAAgB,IAAAC,qBAAA,GAAGC,MAAM,CAACC,gBAAgB,cAAAF,qBAAA,cAAAA,qBAAA,GAAIZ,eAAe;AACnE,MAAMe,SAAS,IAAAC,iBAAA,GAAGH,MAAM,CAACZ,SAAS,cAAAe,iBAAA,cAAAA,iBAAA,GAAIf,SAAS;AAC/C,MAAMgB,OAAO,IAAAC,eAAA,GAAGL,MAAM,CAACX,OAAO,cAAAgB,eAAA,cAAAA,eAAA,GAAIhB,OAAO;AAEzC,MAAMiB,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,CAAC,GAAGU,SAAS,CAAC,CAAC;EAChE,MAAM,CAACQ,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACpE,MAAM,CAACoB,SAAS,EAAEC,YAAY,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACsB,OAAO,EAAEC,UAAU,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACwB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGzB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC9D,MAAM,CAAC0B,OAAO,EAAEC,UAAU,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EAE1C4B,OAAO,CAACC,GAAG,CAACX,oBAAoB,CAAC;EAEjCnB,SAAS,CAAC,MAAM;IACd0B,oBAAoB,CAACK,eAAe,CAACd,YAAY,CAAC,CAAC;EACrD,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;EAElBjB,SAAS,CAAC,MAAM;IACd;IACA,MAAMgC,mBAAmB,GAAGb,oBAAoB,CAACc,MAAM,CACrDC,IAAA,IAA2B;MAAA,IAA1B;QAAEC,YAAY;QAAEC;MAAI,CAAC,GAAAF,IAAA;MACpB,OAAOG,oBAAoB,CAACF,YAAY,EAAEC,GAAG,CAAC;IAChD,CACF,CAAC;IAED,IAAIJ,mBAAmB,CAACM,MAAM,GAAG,CAAC,EAAE;MAClC;MACA,MAAMC,iBAAiB,GAAGpB,oBAAoB,CAACc,MAAM,CACnDO,KAAA,IAA2B;QAAA,IAA1B;UAAEL,YAAY;UAAEC;QAAI,CAAC,GAAAI,KAAA;QACpB,OAAOH,oBAAoB,CAACF,YAAY,EAAEC,GAAG,CAAC,KAAK,KAAK;MAC1D,CACF,CAAC;MACDhB,uBAAuB,CAACmB,iBAAiB,CAAC;IAC5C;EACF,CAAC,EAAE,CAAClB,SAAS,EAAEJ,YAAY,CAAC,CAAC;EAE7B,MAAMwB,4BAA4B,GAAGA,CAAA,KAAM;IACzC,OAAOtB,oBAAoB,CAACuB,MAAM,CAAC,CAACC,GAAG,EAAAC,KAAA,KAA4B;MAAA,IAA1B;QAAET,YAAY;QAAEC;MAAI,CAAC,GAAAQ,KAAA;MAC5DD,GAAG,CAACR,YAAY,CAAC,GAAG,CAACQ,GAAG,CAACR,YAAY,CAAC,IAAI,CAAC,IAAIU,MAAM,CAACT,GAAG,CAAC;MAC1D,OAAOO,GAAG;IACZ,CAAC,EAAE,CAAC,CAAC,CAAC;EACR,CAAC;EAED,MAAMZ,eAAe,GAAId,YAAY,IAAK;IACxC,MAAM6B,+BAA+B,GAAG7B,YAAY,CAACyB,MAAM,CACzD,CAACC,GAAG,EAAAI,KAAA,KAA4B;MAAA,IAA1B;QAAEZ,YAAY;QAAEC;MAAI,CAAC,GAAAW,KAAA;MACzBJ,GAAG,CAACR,YAAY,CAAC,GAAG,CAACQ,GAAG,CAACR,YAAY,CAAC,IAAI,CAAC,IAAIU,MAAM,CAACT,GAAG,CAAC;MAC1D,OAAOO,GAAG;IACZ,CAAC,EACD,CAAC,CACH,CAAC;IACD,OAAOG,+BAA+B;EACxC,CAAC;EAED,MAAMT,oBAAoB,GAAGA,CAACF,YAAY,EAAEC,GAAG,KAAK;IAClD,OACGf,SAAS,IAAII,iBAAiB,CAACU,YAAY,CAAC,GAAG,CAAC,IAChD,CAACd,SAAS,IAAIwB,MAAM,CAACT,GAAG,CAAC,GAAG,CAAE;EAEnC,CAAC;EAED,MAAMY,yBAAyB,GAAIC,MAAM,IAAK;IAC5C,OAAO9B,oBAAoB,CAAC+B,IAAI,CAC7BC,WAAW,IAAKA,WAAW,CAACC,MAAM,KAAKH,MAC1C,CAAC;EACH,CAAC;EAED,MAAMI,yBAAyB,GAAGA,CAAA,KAAM;IACtC,OAAOlC,oBAAoB,CAACmB,MAAM,KAAKrB,YAAY,CAACqB,MAAM;EAC5D,CAAC;EAED,MAAMgB,iBAAiB,GAAIF,MAAM,IAAMG,CAAC,IAAK;IAC3C,MAAM;MAAEC;IAAQ,CAAC,GAAGD,CAAC,CAACE,MAAM;IAC5B,IAAID,OAAO,EAAE;MACXpC,uBAAuB,CAAED,oBAAoB,IAAK,CAChD,GAAGA,oBAAoB,EACvBF,YAAY,CAACyC,IAAI,CAAEP,WAAW,IAAKA,WAAW,CAACC,MAAM,KAAKA,MAAM,CAAC,CAClE,CAAC;IACJ,CAAC,MAAM;MACLhC,uBAAuB,CAAED,oBAAoB,IAC3CA,oBAAoB,CAACc,MAAM,CACxBkB,WAAW,IAAKA,WAAW,CAACC,MAAM,KAAKA,MAC1C,CACF,CAAC;IACH;EACF,CAAC;EAED,MAAMO,qBAAqB,GAAIJ,CAAC,IAAK;IACnC,MAAM;MAAEC;IAAQ,CAAC,GAAGD,CAAC,CAACE,MAAM;IAC5B,IAAID,OAAO,EAAE;MACX,MAAMjB,iBAAiB,GAAGtB,YAAY,CAACgB,MAAM,CAAC2B,KAAA,IAA2B;QAAA,IAA1B;UAAEzB,YAAY;UAAEC;QAAI,CAAC,GAAAwB,KAAA;QAClE,OAAOvB,oBAAoB,CAACF,YAAY,EAAEC,GAAG,CAAC,KAAK,KAAK;MAC1D,CAAC,CAAC;MACFhB,uBAAuB,CAACmB,iBAAiB,CAAC;IAC5C,CAAC,MAAM;MACLnB,uBAAuB,CAAC,EAAE,CAAC;IAC7B;EACF,CAAC;EAED,MAAMyC,UAAU,GAAGA,CAAA,KAAM;IACvBvC,YAAY,CAAC,CAACD,SAAS,CAAC;EAC1B,CAAC;EAED,MAAMyC,mBAAmB,GAAGA,CAAC7C,YAAY,EAAEkB,YAAY,KAAMoB,CAAC,IAAK;IACjE,MAAM;MAAEQ;IAAM,CAAC,GAAGR,CAAC,CAACE,MAAM;IAE1B7B,UAAU,CAAED,OAAO,IAAK;MACtB,MAAMqC,cAAc,GAAGrC,OAAO,CAACsC,GAAG,CAAEC,GAAG,IACrCA,GAAG,CAAC/B,YAAY,KAAKA,YAAY,GAAG;QAAE,GAAG+B,GAAG;QAAEC,UAAU,EAAEJ;MAAM,CAAC,GAAGG,GACtE,CAAC;MACD,MAAME,eAAe,GAAGJ,cAAc,CAACN,IAAI,CACxCQ,GAAG,IAAKA,GAAG,CAAC/B,YAAY,KAAKA,YAChC,CAAC;MAED,OAAOiC,eAAe,GAClBJ,cAAc,GACd,CAAC,GAAGA,cAAc,EAAE;QAAE7B,YAAY;QAAEgC,UAAU,EAAEJ;MAAM,CAAC,CAAC;IAC9D,CAAC,CAAC;IAEF7C,eAAe,CAAED,YAAY,IAC3BA,YAAY,CAACgD,GAAG,CAAEd,WAAW,IAC3BA,WAAW,CAAChB,YAAY,KAAKA,YAAY,GACrC;MAAE,GAAGgB,WAAW;MAAEgB,UAAU,EAAEJ;IAAM,CAAC,GACrCZ,WACN,CACF,CAAC;IACD/B,uBAAuB,CAAED,oBAAoB,IAC3CA,oBAAoB,CAAC8C,GAAG,CAAEd,WAAW,IACnCA,WAAW,CAAChB,YAAY,KAAKA,YAAY,GACrC;MAAE,GAAGgB,WAAW;MAAEgB,UAAU,EAAEJ;IAAM,CAAC,GACrCZ,WACN,CACF,CAAC;EACH,CAAC;EAED,MAAMkB,iBAAiB,GAAG,MAAOd,CAAC,IAAK;IACrCA,CAAC,CAACe,cAAc,CAAC,CAAC;IAClB9C,UAAU,CAAC,IAAI,CAAC;IAChB,MAAM+C,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,cAAc,EAAEC,IAAI,CAACC,SAAS,CAACxD,oBAAoB,CAAC,CAAC;IACrEoD,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAEpD,SAAS,CAAC;IACvC;;IAEA,IAAI;MACF,MAAMuD,QAAQ,GAAG,MAAM1E,KAAK,CAAC;QAC3B2E,MAAM,EAAE,MAAM;QACdC,GAAG,EAAE3E,cAAc;QACnB4E,IAAI,EAAER;MACR,CAAC,CAAC;MAEF,IAAIK,QAAQ,CAACG,IAAI,CAACC,MAAM,IAAIJ,QAAQ,CAACG,IAAI,CAACC,MAAM,KAAK,OAAO,EAAE;QAC5DC,KAAK,CAACL,QAAQ,CAACG,IAAI,CAACG,OAAO,CAAC;MAC9B,CAAC,MAAM;QACL,IAAIC,IAAI,GAAG,IAAI;QACf,IAAIP,QAAQ,CAACQ,OAAO,CAAC,cAAc,CAAC,KAAK,iBAAiB,EAAE;UAC1DD,IAAI,GAAG,IAAIE,IAAI,CAAC,CAACT,QAAQ,CAACG,IAAI,CAAC,EAAE;YAC/BO,IAAI,EAAE;UACR,CAAC,CAAC;QACJ,CAAC,MAAM;UACLH,IAAI,GAAG,IAAIE,IAAI,CAAC,CAACT,QAAQ,CAACG,IAAI,CAAC,EAAE;YAC/BO,IAAI,EAAE;UACR,CAAC,CAAC;QACJ;QACA,MAAMR,GAAG,GAAGrE,MAAM,CAAC8E,GAAG,CAACC,eAAe,CAACL,IAAI,CAAC;QAC5C,MAAMM,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;QACxC,MAAMC,kBAAkB,GAAGhB,QAAQ,CAACQ,OAAO,CAAC,qBAAqB,CAAC;QAClE,IAAIQ,kBAAkB,CAACtD,MAAM,GAAG,CAAC,EAAE;UACjC,MAAMuD,QAAQ,GAAGD,kBAAkB,aAAlBA,kBAAkB,uBAAlBA,kBAAkB,CAAEE,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;UAC1DL,IAAI,CAACM,IAAI,GAAGjB,GAAG;UACfW,IAAI,CAACO,YAAY,CAAC,UAAU,EAAEH,QAAQ,CAAC;UACvChE,OAAO,CAACC,GAAG,CAAC2D,IAAI,CAAC;UACjBC,QAAQ,CAACO,IAAI,CAACC,WAAW,CAACT,IAAI,CAAC;UAC/BA,IAAI,CAACU,KAAK,CAAC,CAAC;UACZT,QAAQ,CAACO,IAAI,CAACG,WAAW,CAACX,IAAI,CAAC;QACjC;MACF;IACF,CAAC,CAAC,OAAOY,KAAK,EAAE;MACdxE,OAAO,CAACC,GAAG,CAACuE,KAAK,CAAC;MAClBpB,KAAK,CACH,qGACF,CAAC;IACH;IAEAzD,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;;EAED;EACA;EACA;;EAEA,oBACElB,OAAA;IAAKgG,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBjG,OAAA,CAACd,SAAS;MAAA+G,QAAA,gBACRjG,OAAA,CAACX,MAAM;QAAA6G,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACVrG,OAAA,CAACd,SAAS;QACRoH,EAAE,EAAE;UACFC,OAAO,EAAE,MAAM;UACfC,cAAc,EAAE,eAAe;UAC/BC,KAAK,EAAE;QACT,CAAE;QAAAR,QAAA,eAEFjG,OAAA,CAACb,gBAAgB;UACfsE,KAAK,EAAC,KAAK;UACXiD,OAAO,eACL1G,OAAA,CAACZ,MAAM;YACLuH,KAAK,EAAC,SAAS;YACfzD,OAAO,EAAEnC,SAAU;YACnB6F,QAAQ,EAAEA,CAAA,KAAMrD,UAAU,CAAC;UAAE;YAAA2C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9B,CACF;UACDQ,KAAK,EAAC,4BAA4B;UAClCC,cAAc,EAAC;QAAK;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAuBO,CAAC,eACZrG,OAAA;QAAM+G,QAAQ,EAAEhD,iBAAkB;QAAAkC,QAAA,gBAChCjG,OAAA,CAACP,oBAAoB;UACnBkB,YAAY,EAAEA,YAAa;UAC3B+B,yBAAyB,EAAEA,yBAA0B;UACrDc,mBAAmB,EAAEA,mBAAoB;UACzCR,iBAAiB,EAAEA,iBAAkB;UACrCgE,gBAAgB,EAAE/G,gBAAiB;UACnCoD,qBAAqB,EAAEA,qBAAsB;UAC7CN,yBAAyB,EAAEA,yBAA0B;UACrDhC,SAAS,EAAEA,SAAU;UACrBI,iBAAiB,EAAEA,iBAAkB;UACrCY,oBAAoB,EAAEA,oBAAqB;UAC3CV,OAAO,EAAEA,OAAQ;UACjBc,4BAA4B,EAAEA;QAA6B;UAAA+D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5D,CAAC,eACFrG,OAAA,CAACd,SAAS;UACRoH,EAAE,EAAE;YACFC,OAAO,EAAE,MAAM;YACfU,UAAU,EAAE,QAAQ;YACpBC,aAAa,EAAE,QAAQ;YACvBC,UAAU,EAAE;UACd,CAAE;UAAAlB,QAAA,eAEFjG,OAAA,CAACF,aAAa;YACZsH,QAAQ,EAAEvG,oBAAoB,CAACmB,MAAM,KAAK,CAAC,IAAIf,OAAQ;YACvD0F,KAAK,EAAC,SAAS;YACfU,OAAO,EAAC,WAAW;YACnBrC,IAAI,EAAC,QAAQ;YACb/D,OAAO,EAAEA,OAAQ;YAAAgF,QAAA,EAEhB,CAAChF,OAAO,GAAG,gBAAgB,GAAG;UAA0B;YAAAiF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5C;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEV,CAAC;AAAC3F,EAAA,CA/QID,GAAG;AAAA6G,EAAA,GAAH7G,GAAG;AAgRT,eAAeA,GAAG;AAAC,IAAA6G,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/pierrefrancoispaoletti/Library/Mobile Documents/com~apple~CloudDocs/Desktop/EXPORT_SEPA/transactions-selector/src/components/App/App.js\",\n  _window$comptesDebite,\n  _window$documents,\n  _window$formats,\n  _s = $RefreshSig$();\nimport { Container, FormControlLabel, Switch } from \"@mui/material\";\nimport Header from \"../Header/Header\";\nimport { accountDebitors, documents, formats } from \"../../dummy-data/test-data\";\nimport TransactionsSelector from \"../TransactionsSelector/TransactionsSelector\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport URL_GENERATION from \"../../_config\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ACCOUNT_DEBITORS = (_window$comptesDebite = window.comptesDebiteurs) !== null && _window$comptesDebite !== void 0 ? _window$comptesDebite : accountDebitors;\nconst DOCUMENTS = (_window$documents = window.documents) !== null && _window$documents !== void 0 ? _window$documents : documents;\nconst FORMATS = (_window$formats = window.formats) !== null && _window$formats !== void 0 ? _window$formats : formats;\nconst App = () => {\n  _s();\n  // const [format, setFormat] = useState(0);\n  const [transactions, setTransactions] = useState([...DOCUMENTS]);\n  const [transactionsToExport, setTransactionsToExport] = useState([]);\n  const [isGrouped, setIsGrouped] = useState(localStorage.getItem(\"isGrouped\") === \"true\");\n  const [loading, setLoading] = useState(false);\n  const [transactionTotals, setTransactionTotals] = useState({});\n  const [debitor, setDebitor] = useState([]);\n  useEffect(() => {\n    let prefs = localStorage.getItem(\"debitors\");\n    if (prefs) {\n      const infos = Object.entries(JSON.parse(prefs));\n      console.log(infos);\n\n      // infos.map((info) =>\n      //   setDebitor((deb) => ({\n      //     ...deb,\n      //     debitor_id: info[1],\n      //     nomCrediteur: info[0],\n      //   }))\n      // );\n    }\n  }, []);\n  useEffect(() => {\n    setTransactionTotals(isTransactionOK(transactions));\n  }, [transactions]);\n  useEffect(() => {\n    // Vérifier si des transactions non valides sont sélectionnées\n    const invalidTransactions = transactionsToExport.filter(_ref => {\n      let {\n        nomCrediteur,\n        ttc\n      } = _ref;\n      return isTransactionInvalid(nomCrediteur, ttc);\n    });\n    if (invalidTransactions.length > 0) {\n      // Filtrer les transactions non valides et mettre à jour transactionsToExport\n      const validTransactions = transactionsToExport.filter(_ref2 => {\n        let {\n          nomCrediteur,\n          ttc\n        } = _ref2;\n        return isTransactionInvalid(nomCrediteur, ttc) === false;\n      });\n      setTransactionsToExport(validTransactions);\n    }\n  }, [isGrouped, transactions]);\n  const getTransactionsToExportTotal = () => {\n    return transactionsToExport.reduce((acc, _ref3) => {\n      let {\n        nomCrediteur,\n        ttc\n      } = _ref3;\n      acc[nomCrediteur] = (acc[nomCrediteur] || 0) + Number(ttc);\n      return acc;\n    }, {});\n  };\n  useEffect(() => {\n    localStorage.setItem(\"isGrouped\", isGrouped);\n  }, [isGrouped]);\n  const isTransactionOK = transactions => {\n    const totalTransactionsByNomCrediteur = transactions.reduce((acc, _ref4) => {\n      let {\n        nomCrediteur,\n        ttc\n      } = _ref4;\n      acc[nomCrediteur] = (acc[nomCrediteur] || 0) + Number(ttc);\n      return acc;\n    }, {});\n    return totalTransactionsByNomCrediteur;\n  };\n  const isTransactionInvalid = (nomCrediteur, ttc) => {\n    return isGrouped && transactionTotals[nomCrediteur] < 0 || !isGrouped && Number(ttc) < 0;\n  };\n  const isTransactionToBeExported = Res_id => {\n    return transactionsToExport.some(transaction => transaction.Res_Id === Res_id);\n  };\n  const isAllTransactionsSelected = () => {\n    return transactionsToExport.length === transactions.length;\n  };\n  const selectTransaction = Res_Id => e => {\n    console.log(Res_Id);\n    const {\n      checked\n    } = e.target;\n    if (checked) {\n      setTransactionsToExport(transactionsToExport => [...transactionsToExport, transactions.find(transaction => transaction.Res_Id === Res_Id)]);\n    } else {\n      setTransactionsToExport(transactionsToExport => transactionsToExport.filter(transaction => transaction.Res_Id !== Res_Id));\n    }\n  };\n  const selectAllTransactions = e => {\n    const {\n      checked\n    } = e.target;\n    if (checked) {\n      const validTransactions = transactions.filter(_ref5 => {\n        let {\n          nomCrediteur,\n          ttc\n        } = _ref5;\n        return isTransactionInvalid(nomCrediteur, ttc) === false;\n      });\n      setTransactionsToExport(validTransactions);\n    } else {\n      setTransactionsToExport([]);\n    }\n  };\n  const setGrouped = () => {\n    setIsGrouped(!isGrouped);\n  };\n  const handleChangeDebitor = (transactions, nomCrediteur) => e => {\n    const {\n      value\n    } = e.target;\n    setDebitor(debitor => {\n      const updatedDebitor = debitor.map(deb => deb.nomCrediteur === nomCrediteur ? {\n        ...deb,\n        debitor_id: value\n      } : deb);\n      const existingDebitor = updatedDebitor.find(deb => deb.nomCrediteur === nomCrediteur);\n      return existingDebitor ? updatedDebitor : [...updatedDebitor, {\n        nomCrediteur,\n        debitor_id: value\n      }];\n    });\n    setTransactions(transactions => transactions.map(transaction => transaction.nomCrediteur === nomCrediteur ? {\n      ...transaction,\n      debitor_id: value\n    } : transaction));\n    setTransactionsToExport(transactionsToExport => transactionsToExport.map(transaction => transaction.nomCrediteur === nomCrediteur ? {\n      ...transaction,\n      debitor_id: value\n    } : transaction));\n    const storedDebitors = localStorage.getItem(\"debitors\");\n    const debitorData = storedDebitors ? JSON.parse(storedDebitors) : {};\n    debitorData[nomCrediteur] = value;\n    localStorage.setItem(\"debitors\", JSON.stringify(debitorData));\n  };\n  const handleGenerateXML = async e => {\n    e.preventDefault();\n    setLoading(true);\n    const formData = new FormData();\n    formData.append(\"transactions\", JSON.stringify(transactionsToExport));\n    formData.append(\"isGrouped\", isGrouped);\n    // formData.append(\"format\", format);\n\n    try {\n      const response = await axios({\n        method: \"post\",\n        url: URL_GENERATION,\n        data: formData,\n        responseType: \"blob\"\n      });\n      if (response.data.status && response.data.status === \"error\") {\n        alert(response.data.message);\n      } else {\n        let blob = null;\n        if (response.headers[\"content-type\"] === \"application/xml\") {\n          blob = new Blob([response.data], {\n            type: \"application/xml\"\n          });\n        } else {\n          blob = new Blob([response.data], {\n            type: \"application/zip\"\n          });\n        }\n        const url = window.URL.createObjectURL(blob);\n        const link = document.createElement(\"a\");\n        const contentDisposition = response.headers[\"content-disposition\"];\n        console.log(response.headers[\"content-length\"]);\n        if (contentDisposition.length > 0) {\n          const filename = contentDisposition === null || contentDisposition === void 0 ? void 0 : contentDisposition.split(\"filename=\")[1];\n          link.href = url;\n          link.setAttribute(\"download\", filename);\n          console.log(link);\n          document.body.appendChild(link);\n          link.click();\n          document.body.removeChild(link);\n        }\n      }\n    } catch (error) {\n      console.log(error);\n      alert(\"Il y à eu une erreur lors de la soumission du formulaire, veuillez réessayer dans quelques instants\");\n    }\n    setLoading(false);\n  };\n\n  // const handleChangeFormat = (e) => {\n  //   setFormat(e.target.value);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        sx: {\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          width: \"100%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"top\",\n          sx: {\n            color: \"#006cb5\"\n          },\n          control: /*#__PURE__*/_jsxDEV(Switch, {\n            checked: isGrouped,\n            onChange: () => setGrouped()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this),\n          label: \"Regrouper les transactions\",\n          labelPlacement: \"start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleGenerateXML,\n        children: [/*#__PURE__*/_jsxDEV(TransactionsSelector, {\n          transactions: transactions,\n          isTransactionToBeExported: isTransactionToBeExported,\n          handleChangeDebitor: handleChangeDebitor,\n          selectTransaction: selectTransaction,\n          DEBITORS_ACCOUNT: ACCOUNT_DEBITORS,\n          selectAllTransactions: selectAllTransactions,\n          isAllTransactionsSelected: isAllTransactionsSelected,\n          isGrouped: isGrouped,\n          transactionTotals: transactionTotals,\n          isTransactionInvalid: isTransactionInvalid,\n          debitor: debitor,\n          getTransactionsToExportTotal: getTransactionsToExportTotal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          sx: {\n            display: \"flex\",\n            alignItems: \"center\",\n            flexDirection: \"column\",\n            paddingTop: \"40px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(LoadingButton, {\n            disabled: transactionsToExport.length === 0 || loading,\n            sx: {\n              background: \"#00517b\"\n            },\n            variant: \"contained\",\n            type: \"submit\",\n            loading: loading,\n            children: !loading ? \"Générer l'export SEPA\" : \"XML en cours de création\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 240,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"AEugH+B9pOEj5PNUqR/baQ3mrN8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Container","FormControlLabel","Switch","Header","accountDebitors","documents","formats","TransactionsSelector","useEffect","useState","axios","URL_GENERATION","LoadingButton","jsxDEV","_jsxDEV","ACCOUNT_DEBITORS","_window$comptesDebite","window","comptesDebiteurs","DOCUMENTS","_window$documents","FORMATS","_window$formats","App","_s","transactions","setTransactions","transactionsToExport","setTransactionsToExport","isGrouped","setIsGrouped","localStorage","getItem","loading","setLoading","transactionTotals","setTransactionTotals","debitor","setDebitor","prefs","infos","Object","entries","JSON","parse","console","log","isTransactionOK","invalidTransactions","filter","_ref","nomCrediteur","ttc","isTransactionInvalid","length","validTransactions","_ref2","getTransactionsToExportTotal","reduce","acc","_ref3","Number","setItem","totalTransactionsByNomCrediteur","_ref4","isTransactionToBeExported","Res_id","some","transaction","Res_Id","isAllTransactionsSelected","selectTransaction","e","checked","target","find","selectAllTransactions","_ref5","setGrouped","handleChangeDebitor","value","updatedDebitor","map","deb","debitor_id","existingDebitor","storedDebitors","debitorData","stringify","handleGenerateXML","preventDefault","formData","FormData","append","response","method","url","data","responseType","status","alert","message","blob","headers","Blob","type","URL","createObjectURL","link","document","createElement","contentDisposition","filename","split","href","setAttribute","body","appendChild","click","removeChild","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","display","justifyContent","width","color","control","onChange","label","labelPlacement","onSubmit","DEBITORS_ACCOUNT","alignItems","flexDirection","paddingTop","disabled","background","variant","_c","$RefreshReg$"],"sources":["/Users/pierrefrancoispaoletti/Library/Mobile Documents/com~apple~CloudDocs/Desktop/EXPORT_SEPA/transactions-selector/src/components/App/App.js"],"sourcesContent":["import { Container, FormControlLabel, Switch } from \"@mui/material\";\nimport Header from \"../Header/Header\";\nimport {\n  accountDebitors,\n  documents,\n  formats,\n} from \"../../dummy-data/test-data\";\nimport TransactionsSelector from \"../TransactionsSelector/TransactionsSelector\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport URL_GENERATION from \"../../_config\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\n\nconst ACCOUNT_DEBITORS = window.comptesDebiteurs ?? accountDebitors;\nconst DOCUMENTS = window.documents ?? documents;\nconst FORMATS = window.formats ?? formats;\n\nconst App = () => {\n  // const [format, setFormat] = useState(0);\n  const [transactions, setTransactions] = useState([...DOCUMENTS]);\n  const [transactionsToExport, setTransactionsToExport] = useState([]);\n  const [isGrouped, setIsGrouped] = useState(\n    localStorage.getItem(\"isGrouped\") === \"true\"\n  );\n  const [loading, setLoading] = useState(false);\n  const [transactionTotals, setTransactionTotals] = useState({});\n  const [debitor, setDebitor] = useState([]);\n\n  useEffect(() => {\n    let prefs = localStorage.getItem(\"debitors\");\n\n    if (prefs) {\n      const infos = Object.entries(JSON.parse(prefs));\n\n      console.log(infos);\n\n      // infos.map((info) =>\n      //   setDebitor((deb) => ({\n      //     ...deb,\n      //     debitor_id: info[1],\n      //     nomCrediteur: info[0],\n      //   }))\n      // );\n    }\n  }, []);\n\n  useEffect(() => {\n    setTransactionTotals(isTransactionOK(transactions));\n  }, [transactions]);\n\n  useEffect(() => {\n    // Vérifier si des transactions non valides sont sélectionnées\n    const invalidTransactions = transactionsToExport.filter(\n      ({ nomCrediteur, ttc }) => {\n        return isTransactionInvalid(nomCrediteur, ttc);\n      }\n    );\n\n    if (invalidTransactions.length > 0) {\n      // Filtrer les transactions non valides et mettre à jour transactionsToExport\n      const validTransactions = transactionsToExport.filter(\n        ({ nomCrediteur, ttc }) => {\n          return isTransactionInvalid(nomCrediteur, ttc) === false;\n        }\n      );\n      setTransactionsToExport(validTransactions);\n    }\n  }, [isGrouped, transactions]);\n\n  const getTransactionsToExportTotal = () => {\n    return transactionsToExport.reduce((acc, { nomCrediteur, ttc }) => {\n      acc[nomCrediteur] = (acc[nomCrediteur] || 0) + Number(ttc);\n      return acc;\n    }, {});\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"isGrouped\", isGrouped);\n  }, [isGrouped]);\n\n  const isTransactionOK = (transactions) => {\n    const totalTransactionsByNomCrediteur = transactions.reduce(\n      (acc, { nomCrediteur, ttc }) => {\n        acc[nomCrediteur] = (acc[nomCrediteur] || 0) + Number(ttc);\n        return acc;\n      },\n      {}\n    );\n    return totalTransactionsByNomCrediteur;\n  };\n\n  const isTransactionInvalid = (nomCrediteur, ttc) => {\n    return (\n      (isGrouped && transactionTotals[nomCrediteur] < 0) ||\n      (!isGrouped && Number(ttc) < 0)\n    );\n  };\n\n  const isTransactionToBeExported = (Res_id) => {\n    return transactionsToExport.some(\n      (transaction) => transaction.Res_Id === Res_id\n    );\n  };\n\n  const isAllTransactionsSelected = () => {\n    return transactionsToExport.length === transactions.length;\n  };\n\n  const selectTransaction = (Res_Id) => (e) => {\n    console.log(Res_Id);\n    const { checked } = e.target;\n    if (checked) {\n      setTransactionsToExport((transactionsToExport) => [\n        ...transactionsToExport,\n        transactions.find((transaction) => transaction.Res_Id === Res_Id),\n      ]);\n    } else {\n      setTransactionsToExport((transactionsToExport) =>\n        transactionsToExport.filter(\n          (transaction) => transaction.Res_Id !== Res_Id\n        )\n      );\n    }\n  };\n\n  const selectAllTransactions = (e) => {\n    const { checked } = e.target;\n    if (checked) {\n      const validTransactions = transactions.filter(({ nomCrediteur, ttc }) => {\n        return isTransactionInvalid(nomCrediteur, ttc) === false;\n      });\n      setTransactionsToExport(validTransactions);\n    } else {\n      setTransactionsToExport([]);\n    }\n  };\n\n  const setGrouped = () => {\n    setIsGrouped(!isGrouped);\n  };\n\n  const handleChangeDebitor = (transactions, nomCrediteur) => (e) => {\n    const { value } = e.target;\n\n    setDebitor((debitor) => {\n      const updatedDebitor = debitor.map((deb) =>\n        deb.nomCrediteur === nomCrediteur ? { ...deb, debitor_id: value } : deb\n      );\n      const existingDebitor = updatedDebitor.find(\n        (deb) => deb.nomCrediteur === nomCrediteur\n      );\n\n      return existingDebitor\n        ? updatedDebitor\n        : [...updatedDebitor, { nomCrediteur, debitor_id: value }];\n    });\n\n    setTransactions((transactions) =>\n      transactions.map((transaction) =>\n        transaction.nomCrediteur === nomCrediteur\n          ? { ...transaction, debitor_id: value }\n          : transaction\n      )\n    );\n    setTransactionsToExport((transactionsToExport) =>\n      transactionsToExport.map((transaction) =>\n        transaction.nomCrediteur === nomCrediteur\n          ? { ...transaction, debitor_id: value }\n          : transaction\n      )\n    );\n\n    const storedDebitors = localStorage.getItem(\"debitors\");\n    const debitorData = storedDebitors ? JSON.parse(storedDebitors) : {};\n    debitorData[nomCrediteur] = value;\n    localStorage.setItem(\"debitors\", JSON.stringify(debitorData));\n  };\n\n  const handleGenerateXML = async (e) => {\n    e.preventDefault();\n\n    setLoading(true);\n    const formData = new FormData();\n    formData.append(\"transactions\", JSON.stringify(transactionsToExport));\n    formData.append(\"isGrouped\", isGrouped);\n    // formData.append(\"format\", format);\n\n    try {\n      const response = await axios({\n        method: \"post\",\n        url: URL_GENERATION,\n        data: formData,\n        responseType: \"blob\",\n      });\n\n      if (response.data.status && response.data.status === \"error\") {\n        alert(response.data.message);\n      } else {\n        let blob = null;\n\n        if (response.headers[\"content-type\"] === \"application/xml\") {\n          blob = new Blob([response.data], {\n            type: \"application/xml\",\n          });\n        } else {\n          blob = new Blob([response.data], {\n            type: \"application/zip\",\n          });\n        }\n\n        const url = window.URL.createObjectURL(blob);\n        const link = document.createElement(\"a\");\n        const contentDisposition = response.headers[\"content-disposition\"];\n        console.log(response.headers[\"content-length\"]);\n        if (contentDisposition.length > 0) {\n          const filename = contentDisposition?.split(\"filename=\")[1];\n          link.href = url;\n          link.setAttribute(\"download\", filename);\n          console.log(link);\n          document.body.appendChild(link);\n          link.click();\n          document.body.removeChild(link);\n        }\n      }\n    } catch (error) {\n      console.log(error);\n      alert(\n        \"Il y à eu une erreur lors de la soumission du formulaire, veuillez réessayer dans quelques instants\"\n      );\n    }\n\n    setLoading(false);\n  };\n\n  // const handleChangeFormat = (e) => {\n  //   setFormat(e.target.value);\n  // };\n\n  return (\n    <div className=\"App\">\n      <Container>\n        <Header />\n        <Container\n          sx={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            width: \"100%\",\n          }}\n        >\n          <FormControlLabel\n            value=\"top\"\n            sx={{ color: \"#006cb5\" }}\n            control={\n              <Switch checked={isGrouped} onChange={() => setGrouped()} />\n            }\n            label=\"Regrouper les transactions\"\n            labelPlacement=\"start\"\n          />\n        </Container>\n        <form onSubmit={handleGenerateXML}>\n          <TransactionsSelector\n            transactions={transactions}\n            isTransactionToBeExported={isTransactionToBeExported}\n            handleChangeDebitor={handleChangeDebitor}\n            selectTransaction={selectTransaction}\n            DEBITORS_ACCOUNT={ACCOUNT_DEBITORS}\n            selectAllTransactions={selectAllTransactions}\n            isAllTransactionsSelected={isAllTransactionsSelected}\n            isGrouped={isGrouped}\n            transactionTotals={transactionTotals}\n            isTransactionInvalid={isTransactionInvalid}\n            debitor={debitor}\n            getTransactionsToExportTotal={getTransactionsToExportTotal}\n          />\n          <Container\n            sx={{\n              display: \"flex\",\n              alignItems: \"center\",\n              flexDirection: \"column\",\n              paddingTop: \"40px\",\n            }}\n          >\n            <LoadingButton\n              disabled={transactionsToExport.length === 0 || loading}\n              sx={{ background: \"#00517b\" }}\n              variant=\"contained\"\n              type=\"submit\"\n              loading={loading}\n            >\n              {!loading ? \"Générer l'export SEPA\" : \"XML en cours de création\"}\n            </LoadingButton>\n          </Container>\n        </form>\n      </Container>\n    </div>\n  );\n};\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}